services:
  db:
    image: postgres:13.4
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=twoops_tracker
      - POSTGRES_PASSWORD=twoops_tracker
      - POSTGRES_DB=twoops_tracker
    ports:
      # Allow DB access from outside the container
      - "54321:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U twoops_tracker"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    restart: always
    image: redis:6.2
    expose:
      - "6379"

  app:
    image: codeforafrica/twoopstracker:latest
    restart: unless-stopped
    build:
      context: .
      target: python-app-ci
    volumes:
      - app-staticfiles:/app/staticfiles
      - ${APP_VOLUME:-app-files}:/app
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - TWOOPSTRACKER_ALLOWED_HOSTS=${TWOOPSTRACKER_ALLOWED_HOSTS:-*}
      - TWOOPSTRACKER_DATABASE_URL=${TWOOPSTRACKER_DATABASE_URL:-postgresql://twoops_tracker:twoops_tracker@db:5432/twoops_tracker}
      - TWOOPSTRACKER_DEBUG=${TWOOPSTRACKER_DEBUG:-True}
      - TWOOPSTRACKER_CELERY_BROKER_URL=${TWOOPSTRACKER_CELERY_BROKER_URL:-redis://redis:6379/0}
      # psql connection parameters (used in wait-for-postgrsql.sh)
      # see: https://www.postgresql.org/docs/13.4/libpq-envars.html
      - PGHOST=db
      - PGUSER=twoops_tracker
      - PGPASSWORD=twoops_tracker
      - PGDATABASE=twoops_tracker
    stdin_open: true
    tty: true
    command: ["/wait-for-postgres.sh", "/cmd.sh"]

  nginx:
    image: nginx:1.20
    restart: unless-stopped
    volumes:
      - ./contrib/docker-compose/nginx:/etc/nginx/conf.d
      - app-staticfiles:/var/www/static
      - app-mediafiles:/var/www/media
    ports:
      - 8000:80
    depends_on:
      - app

volumes:
  db-data:
  app-staticfiles:
  app-mediafiles:
  app-files:
